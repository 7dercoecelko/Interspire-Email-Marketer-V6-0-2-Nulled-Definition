/**
 * Player
 */

// Controls
.Playback {
	@include negative-text;
	width: 100%;
	display: flex;
	flex-flow: column nowrap; // items in one row, no wrapping
	align-items: stretch; // full-height children
	justify-content: space-between; // distribute items
	justify-content: flex-start;
	flex: 1;
	position: relative;

	// background-color: $mediumlightgray;
	// color: $text-color;
	// Purple background.
	background-color: $primary-color;
	background-image: linear-gradient(lighten($primary-color, 10%), $primary-color);
	color: $bleach;

	.Playback-title a {
		color: $bleach;
	}

	@media (min-width: $layout-s) {
		flex-wrap: nowrap;
	}

	.Bar--bottom & {
		border-top: 1px solid $primary-color;
		min-height: rem($bar-height + $progress-height);
		padding-bottom: rem($progress-height);

		// if width is less than 100%, add this:
		// border-left: 1px solid rgb(111, 111, 111);
		// border-top-right-radius: $border-radius;
		// border-top-left-radius: $border-radius;
	}
}

.Playback-cover {
	order: 1;

	img {
		width: 100%;
	}
}
.Playback-body {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
}
.Playback-text {
	@include size-1;
	padding: 2rem 0.5rem;
	display: flex;
	flex: 2 0 7.4rem; // 7.4 = 3 lines of text
	order: 1;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	overflow-y: auto;
	text-align: center;

	a {
		display: block;
	}
}

.Playback-channel {
	padding: 0 1rem 1rem;
	order: 2;
}

.Playback-title {
	a {
		color: $text-color;
		font-weight: bold;
	}
}

.Playback-description {
	font-style: italic;
	padding-top: 0.2rem;
	font-size: 0.8rem;
	margin-bottom: 0;
}

.Playback-buttons {
	color: white;

	[class^="icon-"],
	[class*=" icon-"] {
		color: white;
	}

	background: linear-gradient(lighten($primary-color, 10%), $primary-color);
	display: flex;
	order: 3;
	flex-basis: 3.5rem;
	justify-content: space-around;
	align-items: stretch;
	max-width: 20rem;
}

.Playback-button {
	display: flex;
	flex-grow: 1;
	justify-content: center;
	font-size: 1.4rem;
	flex-basis: 20%;
	outline-offset: -0.5rem;
}

.Playback-shuffle {
	svg {
		opacity: 0.5;
	}

	&.is-active {
		svg {
			opacity: 1;
		}
	}
}

.Playback-toggleVolume {
	font-size: 0.8rem;
	color: white;
}

//
.Playback-layoutButtons {
	position: absolute;
	top: -1.4rem;
	right: -1rem;
	z-index: 2;
	padding: 0.5rem;
	display: flex;
	justify-content: flex-end;

	> *:not(:first-child) {
		margin-left: 0.2em;
	}

	.Btn {
		box-shadow: none;
	}

	// no need to change player when it's small and without channel
	.is-minimized.is-withoutPlayer & {
		display: none;
	}
}

.Playback-fullscreenBtn {
	order: 1;

	svg {
		vertical-align: middle;
	}
}

.Playback-player {
	position: relative;
}

// Animate buttons that should only be visible when the player is ready.
.Playback-text,
.Playback-buttons,
.Playback-toggleVolume,
.Playback-fullscreenBtn {
	transition: opacity 300ms $easing, transform 300ms $easing, height 300ms $easing;
}

/**
 * Minimal state
 */
$bar-height-minimized: rem(70);

.is-minimized {
    .EmberYoutube-progress,
    .Playback-body {
		display: none;
	}

	.Aside--right {
		width: 14rem;
	}

	.Playback-layoutButtons {
		// the next button in the size button
		.Playback-button {
			display: block;
		}
	}

	.Playback-text {
		@include size-0;
		color: $bleach;
		padding: 0 0.5em;
		flex-basis: 5em;
	}

	.Playback-channel {
		padding: 0;
		margin: 2px;
	}

	.Playback .ChannelCard--wide .Cover {
		flex-basis: 2.5rem;
	}

	.Playback .ChannelCard-title {
		@include size-1;
	}
}

/**
 * Fullscreen state
 */
.is-maximized {
	.Aside--right {
		top: 0;
		right: 0;
		width: 100%;
		height: 100%;
		background-color: black;
	}

	.Playback {
		height: 100%;
		background: black;
		flex-flow: row nowrap;
	}

	.Playback-layoutButtons {
		top: 0;
		right: 0;
	}

	.Playback-player {
		display: flex;
		width: 100%;
		min-height: 50vh;
		margin-bottom: 1rem;

		@media (min-width: $layout-s) {
			min-height: 90vh;
		}

		#EmberYoutube-player {
			position: absolute;
			width: 100%;
			height: 100%;
		}
	}

	.Playback-channel,
	.Playback-buttons,
	.Playback-text {
		flex-basis: (100 / 3) * 1%;
	}

	.Playback-channel {
		order: 1;
		display: none;

		@media (min-width: $layout-m) {
			display: block;
		}
	}

	.Playback-text {
		padding: 0;

		@media (max-width: $layout-s) {
			flex-basis: 100%;
			padding-left: 1rem;
			padding-right: 2rem;
		}
	}

	.Player {
		flex: 1;
		position: relative;
	}

	.Playback-title a {
		@include negative-text;
		color: $white;
	}

	.Playback-buttons {
		background: black;
		margin: auto;

		@media (max-width: $layout-s) {
			flex: 1;
		}
	}

	.ChannelCard--wide {
		max-width: 20rem;
		margin-left: auto;
		margin-right: auto;
		background-color: transparent;
	}

	.ChannelCard-title {
		color: $bleach;
	}
}

/*
	since we are using Youtubes directly
	it becones comfusing where to click
	and this is an element too much in the UX
 */
.EmberYoutube-progress {
	display: none;
}
