/**
 * Player
 */

// Controls
.Playback {
	width: 100%;
	display: flex;
	flex-flow: column nowrap; // items in one row, no wrapping
	align-items: stretch; // full-height children
	justify-content: space-between; // distribute items
	justify-content: flex-start;
	flex: 1;
	position: relative;
	background-color: $mediumlightgray;
	color: $text-color;

	@media (min-width: $layout-s) {
		flex-wrap: nowrap;
	}

	.Bar--bottom & {
		border-top: 1px solid $primary-color;
		min-height: rem($bar-height + $progress-height);
		padding-bottom: rem($progress-height);
		// if width is less than 100%, add this:
		// border-left: 1px solid rgb(111, 111, 111);
		// border-top-right-radius: $border-radius;
		// border-top-left-radius: $border-radius;
	}

	// icon size here
	.Btn {
		border-width: 0;
	}
	[class^="icon-"],
	[class*=" icon-"] {
		margin-right: 0;
	}
}
.Playback-cover {
	order: 1;
	img {
		width: 100%;
	}
}
.Playback-text {
	@include size-1;
	padding: 2rem 0.5rem;
	display: flex;
	flex: 2 0 7.4rem; // 7.4 = 3 lines of text
	order: 1;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	overflow-y: auto;
	text-align: center;

	a {
		display: block;
	}
}
.Playback-channel {
	padding: 0 1rem 1rem;
	order: 2;
}
.Playback-title {
	a {
		color: $text-color;
		font-weight: bold;
	}
}
.Playback-description {
	font-style: italic;
   padding-top: 0.2rem;
	font-size: 0.8rem;
	margin-bottom: 0;
}
.Playback-buttons {
	color: white;
	background: linear-gradient(lighten($primary-color,10%), $primary-color);
	padding: 0 0.5rem 0.5rem;
	display: flex;
	flex: 0 0 auto;
	justify-content: space-between;
	order: 3;

	.NonBtn {
		align-content: center;
		display: flex;
		font-size: 1.9rem;
	}
	.Btn--text {
		padding: 0;
		font-size: 2rem;
		color: $bleach;
	}
	.Playback-shuffle {
		font-size: 1.5rem;
		display: flex;
		align-self: center;
		padding-left: 1rem;
		padding-right: 1rem;
		opacity: 0.4;
		// margin-right: auto;
		&.is-active {
			opacity: 1;
		}
	}
	.Playback-toggleVolume {
		@include size-0;
		margin-left: 1rem;
		min-width: 47px; // avoid jumping when switching volume
		text-align: center;
	}
}
.Playback-sizeButtons {
	font-size: 0.8rem;
	padding: 0.5rem;
	display: flex;
	justify-content: flex-end;
	> *:not(:first-child) {
		margin-left: 0.2em;
	}
}
.Playback-fullscreenBtn {
	order: 1;
	// padding-right: 0.3rem;
	// padding-left: 0.4rem;
	// margin-left: auto;

	svg {
		vertical-align: middle;
	}
}
.Playback-player {
	// order: 0;

	// Gif loading background.
	background-image: url('../assets/images/noise.gif');
	background-size: cover;
   background-position: center center;
}

// Animate buttons that should only be visible when the player is ready.
.Playback-text,
.Playback-buttons,
.Playback-toggleVolume,
.Playback-fullscreenBtn {
	transition: opacity 300ms $easing, transform 300ms $easing, height 300ms $easing;
	.is-withoutPlayer & {
		opacity: 0;
		height: 0;
		pointer-events: none;
		transform: scale(0.95);
	}
}

/**
 * Fullscreen state
 */
.is-maximized {
	.Aside--right {
		top: 0;
		right: 0;
		width: 100%;
		height: 100%;
		background-color: black;
	}
	.Playback {
		height: 100%;
		background: black;
	}
	.Playback-channel {
		order: 5;
	}
	.Playback-sizeButtons {
		// justify-content: flex-end;
		position: absolute;
		top: 0;
		right: 0;
		z-index: 2;
	}
	.Playback-text {
		flex: 1 0 4rem;
	}
	.Playback-player {
		flex: 10;
		display: flex;
		#EmberYoutube-player {
			position: absolute;
			width: 100%;
			height: 100%;
		}
	}
	.Player {
		flex: 1;
		position: relative;
	}
	.EmberYoutube-progress {
		display: none;
	}
	.Playback-title a {
		@include negative-text;
		color: $white;
	}
	.Playback-buttons {
		background: black;
		margin: auto;
	}
}


/**
 * Minimal state
 */
$bar-height-minimized: rem(70);
.is-minimized {
	.Aside--right {
		width: 100%;
		right: 0;
		overflow: visible;
		height: $bar-height-minimized;
	}
	.Playback {
		flex-flow: row wrap;
		color: $white;
		background-color: $primary-color;
		background: linear-gradient(lighten($primary-color,10%), $primary-color);
	}
	.Playback-channel {
		order: -1;
		flex: 1;
		padding: 0.6rem 0 1rem 0.5rem;
		display: flex;
		.ChannelCard--wide {
			flex: 1;
		}
		.ChannelCard--wide > a {
			flex-flow: row wrap;
		}
	}
	.ChannelCard--wide .Cover {
		flex: 0 0 3rem;
	}
	.Playback-text {
		flex: 2 0 0;
		padding: 0.5rem 0;
	}
	.Playback-title a {
		@include negative-text;
		color: $white;
	}
	.Playback-player {
		order: 5;
		position: fixed;
		right: 0;
		bottom: $bar-height-minimized;
		// order: -2;
		// width: 100%;
	}
	.EmberYoutube-progress {
		position: fixed;
	}
	.Playback-sizeButtons {
		position: absolute;
		top: -0.5rem;
		right: 0;
	}
}
