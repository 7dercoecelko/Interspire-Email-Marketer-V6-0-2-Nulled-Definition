// Button reset (inspired by https://github.com/suitcss/components-button)
// this allows us to use semantic button elements for other things
.Btn {
	-webkit-appearance: none; /* 1 */
	display: inline-flex;
	justify-content: center;
	align-items: center;
	padding: 0.6em;
	line-height: 1;
	cursor: pointer;
	position: relative;
	text-decoration: none;
	user-select: none; /* 6 */
	white-space: normal; /* 7 */
	background: transparent;
	@media (min-width: $layout-l) {
		padding-left: 0.7em;
		padding-right: 0.7em;
	}
}

.CustomSelect,
.Btn {
	@extend %font-bold;
	// proper tap areas
	min-height: 2.1em;
	background-color: $superlightgray;
	box-shadow: $box-shadow;
	transition: border 150ms, background 150ms, box-shadow 150ms;

	&:hover,
	&:focus {
		text-decoration: none;
		box-shadow: $box-shadow-hover;
	}

	// pressed down
	&:active,
	&.is-active {
		outline: none;
		box-shadow: $box-shadow-active;
	}

	// focus
	&:focus {
		outline: none;
		border-color: $primary-color;
	}

	// disabled
	&:disabled,
	&.is-disabled {
		cursor: default;
		opacity: 0.25;
	}

	// buxfix because ember sometimes adds a div inside a button
	div {
		display: inline;
	}
}

/**
 * Button sizes
 */
.Btn--small {
	font-size: rem(12);
}
.Btn--large {
	@include size-2;
}
.Btn--huge {
	@include size-3;
	// padding: 0.9rem
}
.Btn--full {
	width: 100%;
	text-align: center;
}

/**
 * Primary, colored button
 */
.Btn--primary {
	background-color: $green;
	color: $bleach;

	&:hover,
	&:focus,
	&:active {
		background-color: $green;
		background-image: linear-gradient(to bottom, rgba($white, 0.1) 40%, $green);
	}
	&.is-flashing {
		background-color: $yellow;
	}
}

/**
 * Important, colored button
 */
.Btn--important {
	background-color: $primary-color;
	color: $white;
	&:hover {
		background-color: $primary-color;
	}
}

/**
 * Danger, colored button
 */
.Btn--danger {
	color: $red;
}

.Btn--transparent {
	border: 2px solid $white;
	color: $white;
	// reset normal btn styles
	box-shadow: none;
	background-image: none;
	background-color: transparent;
	&:hover,
	&:focus,
	&:active,
	&.is-active {
		box-shadow: none;
		border-color: $white;
	}
}

/**
 * Buttons that looks like text
 */
// extra specificity hack
.Btn.Btn--text {
	border-color: transparent;
	background-image: none;
	background-color: transparent;
	box-shadow: none;
	padding-left: 0.4em;
	padding-right: 0.4em;
	&:hover,
	&:focus {
		background-image: none;
		text-decoration: underline;
		border-color: transparent;
	}
}
.Btn--round {
	padding: 1.5rem 1.6rem 1.4rem 1.5rem;
	border-radius: 50%;
	border-left: 2px solid $primary-color;
	border-bottom: 2px solid $primary-color;
	&:hover {
		border-color: darken($primary-color, 10%);
	}
}

// Shows either a up or down indicator
// according to sorting method
.SortIndicator {
	display: none;
	font-size: 0.7em;
	.Btn.is-active & {
		display: inline;
	}
}

/**
 * Non Buttons
 * like follow button star
 * aka, html buttons that should not look like them
 **/

.NonBtn {
	padding: 0;
	border: 0 solid transparent;
	background-color: transparent;
	outline: none;
	box-shadow: none;

	&:hover {
		cursor: pointer;
	}
}


/**
 * Big play button
 **/

@keyframes Spinz {
	0% { transform: scale(0.2) rotate(360deg); }
	100% { transform: scale(1) rotate(0); }
}

.PlayButton {
	/* animation */
	animation-name: Spinz;
	animation-duration: 1s;
	animation-iteration-count: 1;
	animation-delay: 1s;
	animation-fill-mode: both;
	animation-timing-function: $easing;
	/* styles */
	position: fixed;
	bottom: 1rem;
	right: 1rem;
	color: white;
	z-index: 3;
	// transform: translateX(0);
	// transition: transform 200ms $easing;
}
